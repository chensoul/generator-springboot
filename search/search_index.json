{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Generator SpringBoot","text":"<p>The Yeoman generator for generating Spring Boot microservices.</p>"},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>Node 18+</li> <li>JDK 17+</li> </ul>"},{"location":"#installation","title":"Installation","text":"<pre><code>$ npm install -g yo\n$ npm install -g generator-springboot\n</code></pre>"},{"location":"#how-to-use","title":"How to use?","text":"<p>Run the following command and answer the questions:</p> <pre><code>$ yo springboot\n</code></pre>"},{"location":"#features","title":"Features","text":"<p>The generator-springboot generates a Spring Boot application with the following features configured:</p> <ul> <li>Spring Boot project with Maven and Gradle support</li> <li>Persistence databases like MySQL, PostgreSQL, MariaDB with Spring Data JPA or Mybatis Plus</li> <li>Flyway and Liquibase database migration support</li> <li>CORS configuration</li> <li>SpringDoc OpenAPI Integration</li> <li>SpringBoot Actuator configuration</li> <li>Testcontainers based Testing and Local dev mode setup</li> <li>DockerCompose for application, ELK, Zipkin, Prometheus, Grafana, Tempo, Loki</li> <li>GitHub Actions Configuration</li> <li>Dockerfile</li> <li>Jenkinsfile</li> <li>SonarQube and JaCoCo based static analysis tools configuration</li> <li>Code formatting using Spotless plugin</li> <li>JUnit 5 for unit testing</li> <li>ArchUnit for architecture testing</li> </ul>"},{"location":"#generate-a-springboot-microservice","title":"Generate a SpringBoot Microservice","text":"<p>After installing the <code>generator-springboot</code>, you can generate a new Spring Boot application as follows:</p> <pre><code>$ yo springboot\nGenerating SpringBoot Application\n? What is the application name? myservice\n? What is the default package name? com.mycompany.myapp\n? Which type of database you want to use? PostgreSQL\n? Which type of database migration tool you want to use? FlywayDB\n? Which type of logging tool you want to use? ELK Docker configuration\n? Which type of trace tool you want to use? Zipkin Docker configuration\n? Select the features you want? Prometheus, Grafana Docker configuration, Localstack Docker configuration\n? Which build tool do you want to use? Maven\n    force myservice/.yo-rc.json\n   create myservice/mvnw\n   create myservice/mvnw.cmd\n   create myservice/.gitignore\n   create myservice/.mvn/wrapper/maven-wrapper.jar\n   create myservice/.mvn/wrapper/maven-wrapper.properties\n   create myservice/pom.xml\n   create myservice/Dockerfile\n   create myservice/Jenkinsfile\n   create myservice/README.md\n   create myservice/.github/workflows/maven.yml\n   create myservice/src/main/resources/db/migration/postgresql/V1__01_init.sql\n   create myservice/docker-compose.yml\n   create myservice/docker-compose-app.yml\n   create myservice/docker-compose-monitor.yml\n   create myservice/docker/prometheus/prometheus.yml\n   create myservice/docker/grafana/provisioning/datasources/datasource.yml\n   create myservice/docker/grafana/provisioning/dashboards/basic-dashboard.json\n   create myservice/docker/grafana/provisioning/dashboards/dashboard.yml\n   create myservice/docker/grafana/provisioning/dashboards/jvm.json\n   create myservice/docker/grafana/provisioning/dashboards/petclinic-dashboard.json\n   create myservice/docker/grafana/provisioning/dashboards/spring-boot-dashboard.json\n   create myservice/docker-compose-elk.yml\n   create myservice/docker/elk/logstash.conf\n   create myservice/docker/elk/elasticsearch.yml\n   create myservice/docker/elk/logstash.yml\n   create myservice/docker/elk/kibana.yml\n   create myservice/docker-compose-zipkin.yml\n   create myservice/.localstack/01_init.sh\n   create myservice/src/main/java/com/mycompany/myservice/Application.java\n   create myservice/src/main/java/com/mycompany/myservice/config/WebMvcConfig.java\n   create myservice/src/main/java/com/mycompany/myservice/config/JacksonConfig.java\n   create myservice/src/main/java/com/mycompany/myservice/config/SpringdocConfig.java\n   create myservice/src/main/java/com/mycompany/myservice/config/ApplicationProperties.java\n   create myservice/src/main/java/com/mycompany/myservice/config/Initializer.java\n   create myservice/src/main/java/com/mycompany/myservice/config/GlobalExceptionHandler.java\n   create myservice/src/main/java/com/mycompany/myservice/config/aop/LoggingAspect.java\n   create myservice/src/main/java/com/mycompany/myservice/exception/ResourceNotFoundException.java\n   create myservice/src/main/java/com/mycompany/myservice/model/response/PagedResult.java\n   create myservice/src/main/java/com/mycompany/myservice/util/AppConstants.java\n   create myservice/src/main/java/com/mycompany/myservice/config/MetricConfig.java\n   create myservice/src/main/java/com/mycompany/myservice/util/AggravateMetricsEndpoint.java\n   create myservice/src/main/resources/application.yml\n   create myservice/src/main/resources/logback-spring.xml\n   create myservice/src/test/java/com/mycompany/myservice/ApplicationIntegrationTest.java\n   create myservice/src/test/java/com/mycompany/myservice/SchemaValidationTest.java\n   create myservice/src/test/java/com/mycompany/myservice/common/ContainersConfig.java\n   create myservice/src/test/java/com/mycompany/myservice/common/AbstractIntegrationTest.java\n   create myservice/src/test/java/com/mycompany/myservice/TestApplication.java\n   create myservice/src/test/java/com/mycompany/myservice/SqsListenerIntegrationTest.java\n   create myservice/src/test/resources/application-test.yml\n   create myservice/src/test/resources/logback-test.xml\n\nNo change to package.json was detected. No package manager install will be executed.\n[INFO] Scanning for projects...\n[INFO]\n[INFO] -----------------&lt; com.mycompany.myapp:myservice &gt;------------------\n[INFO] Building myservice 0.0.1-SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- spotless:2.43.0:apply (default-cli) @ myservice ---\n[INFO] Index file does not exist. Fallback to an empty index\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/test/java/com/mycompany/myservice/TestApplication.java\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/test/java/com/mycompany/myservice/SqsListenerIntegrationTest.java\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/test/java/com/mycompany/myservice/SchemaValidationTest.java\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/test/java/com/mycompany/myservice/common/AbstractIntegrationTest.java\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/test/java/com/mycompany/myservice/common/ContainersConfig.java\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/main/java/com/mycompany/myservice/util/AggravateMetricsEndpoint.java\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/main/java/com/mycompany/myservice/config/ApplicationProperties.java\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/main/java/com/mycompany/myservice/config/GlobalExceptionHandler.java\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/main/java/com/mycompany/myservice/config/aop/LoggingAspect.java\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/main/java/com/mycompany/myservice/config/SpringdocConfig.java\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/main/java/com/mycompany/myservice/model/response/PagedResult.java\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/main/java/com/mycompany/myservice/exception/ResourceNotFoundException.java\n[INFO] Spotless.Java is keeping 21 files clean - 13 were changed to be clean, 8 were already clean, 0 were skipped because caching determined they were already clean\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  3.186 s\n[INFO] Finished at: 2024-10-23T10:28:13+08:00\n[INFO] ------------------------------------------------------------------------\n==========================================\nYour application is generated successfully\n  cd myservice\n  &gt; ./mvnw spring-boot:run\n==========================================\n</code></pre>"},{"location":"#generate-rest-api-with-crud-operations","title":"Generate REST API with CRUD operations","text":"<p>You can generate REST API with CRUD operation using the following command:</p> <p>IMPORTANT: You should run the following command from within the generated project folder.</p> <pre><code>$ cd myservice\n$ yo springboot:controller Customer --base-path /api/customers\n</code></pre> <p>This sub-generator will generate the following:</p> <ul> <li>JPA entity</li> <li>Spring Data JPA Repository</li> <li>Service</li> <li>Spring MVC REST Controller with CRUD operations</li> <li>Unit and Integration Tests for REST Controller</li> <li>Flyway or Liquibase migration to create table</li> </ul> <pre><code>$ yo springboot:controller Customer --base-path /api/customers\nGenerating JPA entity, repository, service and controller\nEntityName: Customer, basePath: /api/customers\n    force .yo-rc.json\n   create src/main/java/com/mycompany/myservice/exception/CustomerNotFoundException.java\n   create src/main/java/com/mycompany/myservice/mapper/CustomerMapper.java\n   create src/main/java/com/mycompany/myservice/model/query/FindCustomerQuery.java\n   create src/main/java/com/mycompany/myservice/model/request/CustomerRequest.java\n   create src/main/java/com/mycompany/myservice/model/response/CustomerResponse.java\n   create src/main/java/com/mycompany/myservice/repository/CustomerRepository.java\n   create src/main/java/com/mycompany/myservice/service/CustomerService.java\n   create src/main/java/com/mycompany/myservice/web/controller/CustomerController.java\n   create src/test/java/com/mycompany/myservice/web/controller/CustomerControllerTest.java\n   create src/test/java/com/mycompany/myservice/web/controller/CustomerControllerIT.java\n   create src/test/java/com/mycompany/myservice/service/CustomerServiceTest.java\n   create src/main/resources/db/migration/postgresql/V2__create_customers_table.sql\n\nNo change to package.json was detected. No package manager install will be executed.\n[INFO] Scanning for projects...\n[INFO]\n[INFO] -----------------&lt; com.mycompany.myapp:myservice &gt;------------------\n[INFO] Building myservice 0.0.1-SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- spotless:2.43.0:apply (default-cli) @ myservice ---\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/test/java/com/mycompany/myservice/web/controller/CustomerControllerTest.java\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/test/java/com/mycompany/myservice/web/controller/CustomerControllerIT.java\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/test/java/com/mycompany/myservice/service/CustomerServiceTest.java\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/main/java/com/mycompany/myservice/web/controller/CustomerController.java\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/main/java/com/mycompany/myservice/mapper/CustomerMapper.java\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/main/java/com/mycompany/myservice/model/request/CustomerRequest.java\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/main/java/com/mycompany/myservice/model/query/FindCustomerQuery.java\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/main/java/com/mycompany/myservice/service/CustomerService.java\n[INFO] Writing clean file: /Users/chensoul/codes/github/generator-springboot/myservice/src/main/java/com/mycompany/myservice/exception/CustomerNotFoundException.java\n[INFO] Spotless.Java is keeping 31 files clean - 9 were changed to be clean, 2 were already clean, 20 were skipped because caching determined they were already clean\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.598 s\n[INFO] Finished at: 2024-10-23T10:52:35+08:00\n[INFO] ------------------------------------------------------------------------\n</code></pre>"},{"location":"#local-development-setup","title":"Local Development Setup","text":"<pre><code>$ git clone https://github.com/chensoul/generator-springboot.git\n$ cd generator-springboot\n$ npm install -g yo\n$ npm install \n$ npm link\n$ yo springboot\n</code></pre>"},{"location":"#releasing-a-new-version","title":"Releasing a new version","text":"<p>Before publishing a new release, make sure to update the version number in <code>package.json</code> updated.</p> <pre><code>$ npm login\n$ npm publish\n</code></pre>"},{"location":"#license","title":"License","text":"<p>The generator-springboot is an Open Source software released under the MIT Licence</p>"}]}